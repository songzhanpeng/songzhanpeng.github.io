import{_ as s,c as e,o,V as a}from"./chunks/framework.3bce2be7.js";const n="/assets/cerbot.479addd2.png",b=JSON.parse('{"title":"博客开启https","description":"所有子域名都开启了https","frontmatter":{"title":"博客开启https","description":"所有子域名都开启了https","date":"2022-01-11T00:00:00.000Z","tags":["建站"]},"headers":[],"relativePath":"posts/博客开启https.md"}'),t={name:"posts/博客开启https.md"},p=a(`<h2 id="背景" tabindex="-1">背景 <a class="header-anchor" href="#背景" aria-label="Permalink to &quot;背景&quot;">​</a></h2><p>今天早上耍着手机，去 github 看了下我的仓库，点击博客地址打开发现竟然是空的，这可吓坏我了。重新试了几次发现还是一样的，把地址粘贴到浏览器打开就好使。查了下资料，原因是 github app 强制 https，而我的网站还是 http 的... 好吧，许久之前埋下的坑，就今天来填吧...</p><h3 id="现状" tabindex="-1">现状 <a class="header-anchor" href="#现状" aria-label="Permalink to &quot;现状&quot;">​</a></h3><p>服务器是买的 Ucloud 的，没啥，就是便宜。之前的建站过程中，我分了 4 个块，主站，blog 站，note 站，box 站，note 和 box 都是一个默认的 html，主站用 threejs 跑了个 demo,博客站用的 vuepress-reco 主题构建的。</p><p>时间长了以后，主站被我废弃了，前段时间萌生了自己写个博客站的想法，说干就干，然后博客站就是主站了，不再做区分。</p><blockquote><p>最近有一些观察和思考。有些人的主站就是为了炫，做的特别酷，过段时间更新一下。有些人就干脆把主站当大杂烩，博客笔记啥的都在上面，比如 vuepress。对我来说，我还是比较喜欢把博客当主站，用一个 home page 的自我介绍就当作主页了，在这里可以外挂笔记站和玩具站。后续笔记站会用 Logseq Publish 构建，玩具站大概会放些 demo 工具之类的。</p></blockquote><p>在我肝了几天把新的博客站（主站）更新了出来后发生了今早的问题。</p><h2 id="开干" tabindex="-1">开干 <a class="header-anchor" href="#开干" aria-label="Permalink to &quot;开干&quot;">​</a></h2><h3 id="目标" tabindex="-1">目标 <a class="header-anchor" href="#目标" aria-label="Permalink to &quot;目标&quot;">​</a></h3><p>主域名(yinyuejun.top) 与子域名(blog.yinyuejun.top, note.yinyuejun.top,box.yinyuejun.top)均开启 https</p><h3 id="方案" tabindex="-1">方案 <a class="header-anchor" href="#方案" aria-label="Permalink to &quot;方案&quot;">​</a></h3><p>毫无疑问，肯定是 let&#39;s encrypt。国内一些云服务厂商有代处理的业务，但是基本都收费，价格不菲...然而看起来他们也是用的 let&#39;s encrypt。一番查阅后，决定使用自动化工具 cerbot，到期自动续，看起来很不错，试一试把</p><h3 id="问题" tabindex="-1">问题 <a class="header-anchor" href="#问题" aria-label="Permalink to &quot;问题&quot;">​</a></h3><p>服务器里之前建站的时候，http 服务器是用的 docker 的 nginx 镜像构建的，然而 cerbot 的 docker Image 看起来已经好久没更新了...也没啥人这么用。我尝试了一下，每输一个命令，就会报一个新的错...吓坏我了...我这个 docker 菜鸟在容器里折腾了半天，决定放弃了...能力不够，还是老实按照官网来</p><p>这也应征了那句话“Less is more”，搞不懂我当初就一个 Nginx，为啥还要装个 docker 装逼...</p><p>然后安装 nginx，还会跟 docker 里的有端口冲突，在把容器和镜像都删干净之后，几行命令装好 nginx</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">yum</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nginx</span></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">enable</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nginx</span></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">start</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nginx</span></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">status</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nginx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">//检查其运行状态</span></span></code></pre></div><p>装好的 nginx 程序目录在/etc/nginx，把之前 docker 里配过的 default.conf 粘过来即可。域文档的目录在/usr/local/src</p><p>然后是安装 cerbot,cerbot 的官网推荐先安装 snapd，再用 snapd 安装 cerbot。<a href="https://certbot.eff.org/instructions?ws=nginx&amp;os=centosrhel8" target="_blank" rel="noreferrer">官方文档安装 cerbot</a></p><p>然而我在<code>sudo snap install core; sudo snap refresh core</code>那里卡住了，死活过不去。</p><p>重复提示这俩报错，跟死循环一样：</p><ul><li><p><code>error: cannot communicate with server</code></p></li><li><p><code>Job for snapd.service failed because the control process exited with error code</code></p></li></ul><p>全是 known issues，网上一堆解决办法...然而全都没用，去 cerbot 的 form 里找了找，也没啥用</p><p>这个时候，我想另辟蹊径，既然装不了 snapd，那我不装你总行了吧，找了找，cerbot 还真有 yum 包，名字叫<code>cerbot-nginx</code>，然而我一看更新时间，醉了...都啥时候的了，看来还是躲不开</p><p>既然是安装 snapd 的问题，那我重新安装不就行了，按照 windows 重启就好的思路，重装，重启，我甚至重启了服务器...然而问题依旧</p><p>思考了下，或许换个姿势装 snapd 就好了呢？然后 google 搜索 centsos 8 install snapd，还真找出几篇不一样的姿势</p><p><a href="https://snapcraft.io/docs/installing-snap-on-centos" target="_blank" rel="noreferrer">官方文档安装 snapd</a></p><p>解决问题:按照官网示例，但是有几点不同</p><ol><li>先升级 epel,<code>sudo dnf upgrade</code> ，然后发现 700 多 M，没事，忍着头皮升，再次输入，并加上 <code>--allowerasing</code></li><li>把<code>sudo yum install snapd</code>换成<code>sudo dnf install snapd </code></li><li>在 create a symbolic link 之后，如果<code>sudo snap install core; sudo snap refresh core</code>报错<code>error: too early for operation, device not yet seeded or device model not acknowledged</code>，就输入命令<code>sudo dnf reinstall snapd</code>重装一下</li></ol><p>然后按照官网的示例接着装</p><p>最后能看到下面这张图 <img src="`+n+'" alt="成功的图片"></p><p>热泪盈眶啊，有没有...</p><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>这次踩坑花了一下午时间，报错的时候去看日志，能看到错误的信息，但由于我不知道是啥，所以信息也没啥用，还得靠 Google,所以我还是得恶补一下操作系统的知识。</p><p><s>然后刚又发现了新问题，站点是 https 的，但我博客文章里的图片，之前上传到七牛云图床的时候，绑定的域名是 cdn.yinyuejun.top，是 http 的...在 https 的站点里就不加载了....要搞的话，得把 cdn 的域名也弄成 https...我醉了。想了下，我之前搞的这个图床 cdn 使用率基本小于 1%，目前没需求那就是没用，我还是把原图扣出来吧。</s></p><p>Done,</p><p>Cheers!</p>',37),l=[p];function r(c,d,i,h,u,y){return o(),e("div",null,l)}const g=s(t,[["render",r]]);export{b as __pageData,g as default};
